{"version":3,"sources":["components/Nav.tsx","components/PersonRow.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","helpers/api.ts","App.tsx","index.tsx"],"names":["Nav","className","to","exact","activeClassName","PersonRow","people","history","useHistory","personSlug","useParams","location","useLocation","query","URLSearchParams","search","get","pattern","RegExp","visiblePeople","filter","p","test","name","motherName","fatherName","map","person","key","id","classnames","slug","onClick","push","pathname","sex","born","died","PeopleTable","prepearedPeople","useState","sortType","setSortType","searchParams","sortBy","visibleTodos","useMemo","sort","a","b","localeCompare","getVisiblePeople","type","value","placeholder","onChange","event","set","target","toString","title","setSortParam","PeoplePage","setPeople","useEffect","fetch","then","res","json","index","App","path","component","from","ReactDOM","render","document","getElementById"],"mappings":"kPA6BeA,G,MA1BH,kBACV,yBAAKC,UAAU,OACb,wBAAIA,UAAU,aACZ,wBAAIA,UAAU,aACZ,kBAAC,IAAD,CACEC,GAAG,IACHC,OAAK,EACLF,UAAU,YACVG,gBAAgB,qBAJlB,SASF,wBAAIH,UAAU,aACZ,kBAAC,IAAD,CACEC,GAAG,UACHD,UAAU,YACVG,gBAAgB,qBAHlB,e,yCCsDOC,EA7DoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC9BC,EAAUC,cACRC,EAAeC,cAAfD,WACFE,EAAWC,cAGXC,EADe,IAAIC,gBAAgBH,EAASI,QACfC,IAAI,UAAY,GAE7CC,EAAU,IAAIC,OAAOL,EAAO,KAC5BM,EAAgBb,EAAOc,QAAO,SAAAC,GAAC,OAAIJ,EAAQK,KAAKD,EAAEE,KAAOF,EAAEG,WAAaH,EAAEI,eAQhF,OACE,oCACGN,EAAcO,KAAI,SAAAC,GAAM,OACvB,wBACEC,IAAKD,EAAOE,GACZ5B,UAAW6B,IAAW,CACpB,eAAiB,EACjB,wBAAyBrB,IAAekB,EAAOI,OAEjDC,QAAS,kBAfWD,EAecJ,EAAOI,UAd/CxB,EAAQ0B,KAAK,CACXC,SAAS,WAAD,OAAaH,KAFE,IAACA,IAiBpB,wBAAI9B,UAAU,4BACX0B,EAAOE,IAEV,wBAAI5B,UAAU,cACX0B,EAAOJ,MAEV,wBACEtB,UAAW6B,IAAW,CACpB,YAAc,EACd,mBAAmC,MAAfH,EAAOQ,IAC3B,iBAAiC,MAAfR,EAAOQ,OAG1BR,EAAOQ,KAEV,wBAAIlC,UAAU,cACX0B,EAAOS,MAEV,wBAAInC,UAAU,cACX0B,EAAOU,MAEV,wBAAIpC,UAAU,+BACX0B,EAAOH,YAAc,UAExB,wBAAIvB,UAAU,6BACX0B,EAAOF,YAAc,gBCgCnBa,EAlEsB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAAsB,EAC5BC,mBAAS,IADmB,mBACrDC,EADqD,KAC3CC,EAD2C,KAItDnC,EAAUC,cACVG,EAAWC,cAEX+B,EAAe,IAAI7B,gBAAgBH,EAASI,QAC5CF,EAAgB8B,EAAa3B,IAAI,UAAY,GAC7C4B,EAAiBD,EAAa3B,IAAI,WAAa,GAE/C6B,EAAeC,mBACnB,kBA/BqB,SAACxC,EAAkBmC,GAC1C,OAAQA,GACN,IAAK,OACH,OAAO,YAAInC,GAAQyC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,KAAOa,EAAEb,QAE/C,IAAK,OACH,OAAO,YAAI9B,GAAQyC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEX,KAAOY,EAAEZ,QAE/C,IAAK,OACH,OAAO,YAAI/B,GAAQyC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEzB,KAAK2B,cAAcD,EAAE1B,SAE3D,IAAK,MACH,OAAO,YAAIjB,GAAQyC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEb,IAAIe,cAAcD,EAAEd,QAE1D,QACE,OAAO7B,GAgBH6C,CAAiBZ,EAAiBE,KACxC,CAACA,EAAUF,IAWb,OACE,oCACE,2BACEa,KAAK,OACLC,MAAOxC,EACPZ,UAAU,eACVqD,YAAY,iBACZC,SAAU,SAACC,GACTb,EAAac,IAAI,QAASD,EAAME,OAAOL,OACvC9C,EAAQ0B,KAAK,CACXlB,OAAQ4B,EAAagB,gBAI7B,2BAAO1D,UAAU,iBACf,+BACE,4BAtC6B,CAAC,KAAM,OAAQ,MAAO,OAAQ,OAAQ,SAAU,UAuC9DyB,KAAI,SAAAkC,GAAK,OACpB,wBAAIhC,IAAKgC,EAAO3D,UAAU,iBACxB,4BACEmD,KAAK,SACLnD,UAAU,gBACV+B,QAAS,kBA9BF,SAAC4B,GACpBlB,EAAYkB,GACZjB,EAAac,IAAI,SAAjB,UAA8BG,IAC9BrD,EAAQ0B,KAAK,CACXlB,OAAQ4B,EAAagB,aA0BIE,CAAaD,KAE3BA,EACD,8BACGhB,IAAWgB,EAAQ,IAAM,WAOtC,+BACE,kBAAC,EAAD,CAAWtD,OAAQuC,QC9DZiB,EApBI,WAAO,IAAD,EACKtB,mBAAmB,IADxB,mBAChBlC,EADgB,KACRyD,EADQ,KAGvBC,qBAAU,WCMHC,MAdU,qEAedC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UDNLF,KAAKH,KAChB,IAEH,IAAMxB,EAAkBjC,EAAOoB,KAAI,SAACC,EAAQ0C,GAAT,mBAAC,eAC/B1C,GAD8B,IAEjCE,GAAIwC,EAAQ,OAGd,OACE,6BACE,4CACA,kBAAC,EAAD,CAAa9B,gBAAiBA,MEOrB+B,EAnBH,WACV,OACE,yBAAKrE,UAAU,OACb,4BAAQA,UAAU,UAChB,kBAAC,EAAD,OAGF,0BAAMA,UAAU,QACd,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOsE,KAAK,IAAIpE,OAAK,EAACqE,UAAW,kBAAM,uCACvC,kBAAC,IAAD,CAAUC,KAAK,QAAQvE,GAAG,MAC1B,kBAAC,IAAD,CAAOqE,KAAK,uBAAuBC,UAAWV,IAC9C,kBAAC,IAAD,CAAOU,UAAW,kBAAM,qDCdlCE,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.85b46f25.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Nav = () => (\n  <nav className=\"nav\">\n    <ul className=\"nav__list\">\n      <li className=\"nav__item\">\n        <NavLink\n          to=\"/\"\n          exact\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\"\n        >\n        Home\n        </NavLink>\n      </li>\n      <li className=\"nav__item\">\n        <NavLink\n          to=\"/people\"\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\"\n        >\n        People\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;\n","import React from 'react';\nimport { useHistory, useParams, useLocation } from 'react-router-dom';\nimport { Person } from '../helpers/api';\nimport classnames from 'classnames';\n\n\ntype Props = {\n  people: Person[];\n};\n\nconst PersonRow: React.FC<Props> = ({ people }) => {\n  const history = useHistory();\n  const { personSlug } = useParams();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query') || '';\n\n  const pattern = new RegExp(query, 'i');\n  const visiblePeople = people.filter(p => pattern.test(p.name + p.motherName + p.fatherName))\n\n  const handleSelectPerson = (slug: string) => {\n    history.push({\n      pathname: `/people/${slug}`,\n    });\n  };\n\n  return (\n    <>\n      {visiblePeople.map(person => (\n        <tr\n          key={person.id}\n          className={classnames({\n            'table__person': true,\n            'table__person--active': personSlug === person.slug,\n          })}\n          onClick={() => handleSelectPerson(person.slug)}\n        >\n          <td className=\"table__row table__row-id\">\n            {person.id}\n          </td>\n          <td className=\"table__row\">\n            {person.name}\n          </td>\n          <td\n            className={classnames({\n              'table__row': true,\n              'table__row-woman': person.sex === 'f',\n              'table__row-man': person.sex === 'm',\n            })}\n          >\n            {person.sex}\n          </td>\n          <td className=\"table__row\">\n            {person.born}\n          </td>\n          <td className=\"table__row\">\n            {person.died}\n          </td>\n          <td className=\"table__row table__row-woman\">\n            {person.motherName || '\\u2013'}\n          </td>\n          <td className=\"table__row table__row-man\">\n            {person.fatherName || '\\u2013'}\n          </td>\n        </tr>\n      ))}\n    </>\n  );\n};\n\nexport default PersonRow;\n","import React, { useState, useMemo } from 'react';\nimport { Person } from '../helpers/api';\n\nimport PersonRow from './PersonRow';\nimport { useHistory, useLocation } from 'react-router-dom';\n\ntype Props = {\n  prepearedPeople: Person[];\n};\n\nconst getVisiblePeople = (people: Person[], sortType: string) => {\n  switch (sortType) {\n    case 'Born':\n      return [...people].sort((a, b) => a.born - b.born);\n\n    case 'Died':\n      return [...people].sort((a, b) => a.died - b.died);\n\n    case 'Name':\n      return [...people].sort((a, b) => a.name.localeCompare(b.name));\n\n    case 'Sex':\n      return [...people].sort((a, b) => a.sex.localeCompare(b.sex));\n\n    default:\n      return people;\n  }\n}\n\nconst PeopleTable: React.FC<Props> = ({ prepearedPeople }) => {\n  const [sortType, setSortType] = useState('');\n  const tableHeader: Array<string> = ['ID', 'Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\n  const history = useHistory();\n  const location = useLocation();\n\n  const searchParams = new URLSearchParams(location.search);\n  const query: string = searchParams.get('query') || '';\n  const sortBy: string = searchParams.get('sortBy') || '';\n\n  const visibleTodos = useMemo(\n    () => getVisiblePeople(prepearedPeople, sortType),\n    [sortType, prepearedPeople]\n  )\n\n  const setSortParam = (title: string) => {\n    setSortType(title)\n    searchParams.set('sortBy', `${title}`);\n    history.push({\n      search: searchParams.toString(),\n    });\n  }\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        value={query}\n        className=\"search-field\"\n        placeholder=\"find person...\"\n        onChange={(event) => {\n          searchParams.set('query', event.target.value);\n          history.push({\n            search: searchParams.toString(),\n          })\n        }}\n      />\n    <table className=\"people__table\">\n      <thead>\n        <tr>\n          {tableHeader.map(title => (\n            <th key={title} className=\"table__header\">\n              <button\n                type=\"button\"\n                className=\"table__button\"\n                onClick={() => setSortParam(title)}\n              >\n                {title}\n                <span>\n                  {sortBy === title ? '*' : ''}\n                </span>\n              </button>\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        <PersonRow people={visibleTodos} />\n      </tbody>\n    </table>\n    </>\n\n  );\n}\n\nexport default PeopleTable;\n","import React, { useState, useEffect } from 'react';\nimport { getPeople, Person } from '../helpers/api';\n\nimport PeopleTable from './PeopleTable';\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople().then(setPeople);\n  }, []);\n\n  const prepearedPeople = people.map((person, index) => ({\n    ...person,\n    id: index + 1,\n  }));\n\n  return (\n    <div>\n      <h1>People table</h1>\n      <PeopleTable prepearedPeople={prepearedPeople} />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","const API_PEOPLE = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport interface Person {\n  name: string;\n  sex: string;\n  born: number;\n  died: number;\n  fatherName: string;\n  motherName: string;\n  id?: number;\n  slug: string;\n}\n\nexport const getPeople = (): Promise<Person[]> => {\n  return fetch(API_PEOPLE)\n    .then(res => res.json());\n};\n","import React/* , { useState, useEffect } */ from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.scss';\n\nimport Nav from './components/Nav';\nimport PeoplePage from './components/PeoplePage';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <Nav />\n      </header>\n\n      <main className=\"main\">\n        <Switch>\n          <Route path=\"/\" exact component={() => <h2>Home</h2>} />\n          <Redirect from=\"/home\" to=\"/\" />\n          <Route path=\"/people/:personSlug?\" component={PeoplePage} />\n          <Route component={() => <h1>Page not found</h1>} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}